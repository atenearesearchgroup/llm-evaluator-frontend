---
import type { IntentInstance } from "@/model/model";
import type { RequestError } from "@/model/request";
import { getInstancesFromModel } from "@/services/intentService";

export interface Props {
    llm: string;
    // drafts: DraftGroup[];
}

const { llm } = Astro.props;

const instancesResponse = await getInstancesFromModel(llm);

if ((instancesResponse as RequestError).status !== undefined) {
    console.error(instancesResponse as RequestError);
    return;
}

const instances = instancesResponse as IntentInstance[];

console.log("instances", instances)

---

<h3 class="text-center mx-auto font-semibold mb-4">{llm}</h3>

{
    instances.map((instance) => (
        <li
            id={`list-${instance.id}`}
            data-id={`${instance.id}`}
            class=" draft-cell m-4 flex flex-col bg-slate-600 bg-opacity-30 p-2 text-sm rounded-lg"
        >
            <a href={`/drafts/${instance.id}`} class="font-bold">
                {instance.displayName || "Untitled"}
            </a>
            <p class="text-end">{instance.platform}</p>
        </li>
    ))
}

<script>
    const bc = new BroadcastChannel("title_change");

    function checkUpdate(draftId: Number, newTitle: string) {
        const $draftLi = document.querySelectorAll(`.draft-cell`);

        $draftLi.forEach((li) => {
            const id = li.getAttribute("data-id");

            if (id === null || parseInt(id) !== draftId) {
                return;
            }

            const $title = li.querySelector("a");

            if ($title === null) {
                console.error("Title anchor not found")
                return;
            }

            $title.textContent = newTitle;
        });
    }

    bc.onmessage = (event) => {
        const { draftId, newTitle } = event.data;

        checkUpdate(draftId, newTitle);
    };
</script>
