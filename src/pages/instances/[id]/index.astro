---
import InstanceInfo from "@/components/ui/instance/InstanceInfo.astro";
import { DeleteInstance } from "@/components/ui/instance/DeleteInstance";
import { InstanceTitle } from "@/components/ui/instance/InstanceTitle";
import Layout from "@/layouts/Layout.astro";
import { getInstance } from "@/services/instanceService";
import { ChatInfo } from "@/components/ui/instance/ChatInfo"
import { CreateDraft } from "@/components/ui/instance/CreateDraft";
import { CloneInstance } from "@/components/ui/instance/CloneInstance";
import { InstanceSettings } from "@/components/ui/instance/InstanceSettings";
import {ExportButton} from "@/components/ui/instance/ExportButton";

const { id } = Astro.params;

if (id == null) {
    return Astro.redirect("/");
}

const instance = await getInstance(parseInt(id));

if ("status" in instance) {
    console.error(instance);

    if (instance.status === 404) {
        return Astro.redirect("/");
    }

    return new Response(JSON.stringify(instance), {status: 500});
}

// console.log(JSON.stringify(exportJson(instance),null,2))
---

<Layout title={`Instance ${instance.displayName}`}>
    <main class="flex-1 space-y-4 p-8 pt-6">
        <div class="flex flex-row items-center justify-between space-y-2">
            <h2 class="text-xl font-bold">Instance #{instance.id}</h2>
            <div class="gap-2 flex items-center">
                <CloneInstance instance={instance} client:visible />
                <InstanceSettings instance={instance} client:visible />
            </div>
        </div>
        <div class="flex flex-row items-center justify-between space-y-2">
            <InstanceTitle
                instanceId={instance.id}
                title={instance.displayName}
                client:visible
            />
            <DeleteInstance instanceId={instance.id} client:visible />
        </div>

        <InstanceInfo instance={instance} />

        <CreateDraft instance={instance} client:visible />

        <section id="draft-list">
            {
                instance.chats.map((draft) => {
                    return (
                        <ChatInfo
                            draft={draft}
                            intentInstanceId={instance.id}
                            client:visible
                        />
                    );
                })
            }
        </section>

        <ExportButton instance={instance} client:visible />
    </main>
</Layout>
